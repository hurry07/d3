<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN"
         "http://www.w3.org/TR/SVG/DTD/svg10.dtd">
<svg id="root" xml:space="preserve" width="600" height="400" onload="OnLoadEvent(evt)">
<script><![CDATA[
var appui=false;
var keytime="",keyvalue="",nb_keys=5;
var xC=new Array(50,100,150,200,250),yC=new Array(250,150,200,100,50);
var cible="",svgdoc="",action="bouge";

function cliquer(evt)
{cible=evt.getTarget().getAttribute("id");
if (cible.indexOf("C")>=0)
{if (action=="bouge") {appui=true};
if (action=="efface") {remove_point(cible);action="bouge"};}
}

function add_point()
{if (nb_keys<9)
{xC[nb_keys]=250;yC[nb_keys]=50;
xC[nb_keys-1]=250;yC[nb_keys-1]=100;
node=svgdoc.createElement("circle");
node.setAttribute("cx",250);node.setAttribute("cy",100);
node.setAttribute("r",3);node.setAttribute("id","C"+(nb_keys-1).toString(10));
node.setAttribute("style","stroke:red;fill:red");
controle.appendChild(node);
nb_keys+=1;
calcul();
}}

function remove_point(cible)
{if (nb_keys>3)
{node=svgdoc.getElementById(cible);
controle.removeChild(node);
num=parseInt(cible.substring(1,2));
for (i=num;i<nb_keys-1;i++)
{xC[i]=xC[i+1];yC[i]=yC[i+1]};
for (i=num+1;i<nb_keys-1;i++)
{obj=svgdoc.getElementById("C"+i.toString(10));
obj.setAttribute("id","C"+(i-1).toString(10));
}
nb_keys-=1;
calcul();
}}

function bouger(evt)
{if ((appui==true)&&(action=="bouge"))
{obj=svgdoc.getElementById(cible);
i=parseInt(cible.substring(1,2));
xm=parseInt(evt.getClientX());ym=parseInt(evt.getClientY());
if (xm<xC[i-1]) {xm=xC[i-1]};if (xm>xC[i+1]) {xm=xC[i+1]};
if (ym>250) {ym=250};if (ym<50) {ym=50};
obj.setAttribute("cx",xm);obj.setAttribute("cy",ym);
xC[i]=xm;yC[i]=ym;
calcul();
}}

function calcul()
{trace="M"+xC[0]+" "+yC[0]+"L";
for (i=1;i<nb_keys;i++)
{trace=trace+xC[i]+","+yC[i]+" "};
courbe.setAttribute("d",trace);
keytime="";keyvalue="";
for (i=0;i<nb_keys;i++)
{x=(xC[i]-50)/200;y=500*(250-yC[i])/200;
keytime=keytime+x.toString(10);if (i<nb_keys-1) keytime+=";";
keyvalue=keyvalue+y.toString(10);if (i<nb_keys-1) keyvalue+=";";};
kt.firstChild.setData(keytime);
kv.firstChild.setData(keyvalue);
anime.setAttribute("keyTimes",keytime);
anime.setAttribute("values",keyvalue);
vitesse();
}

function vitesse()
{chaine="";
for (i=0;i<nb_keys-1;i++)
{if (xC[i+1]>xC[i])
{v=Math.round(150-10*(yC[i]-yC[i+1])/(xC[i+1]-xC[i]));
chaine=chaine+"M"+(250+xC[i]).toString(10)+" "+v.toString(10)+"l"+(xC[i+1]-xC[i]).toString(10)+" 0";
}}
speed.setAttribute("d",chaine);
}

function lacher(evt)
{appui=false}

function OnLoadEvent(evt)
{ svgdoc = evt.getTarget() != null ? evt.getTarget().getOwnerDocument() : null;
   if (svgdoc != null)
   {
    	controle = svgdoc.getElementById("controle");
        kt = svgdoc.getElementById("kt");
        kv = svgdoc.getElementById("kv");
        speed = svgdoc.getElementById("speed");
        anime = svgdoc.getElementById("anime");
	courbe = svgdoc.getElementById("courbe");
  }
calcul();
}
]]></script>
<defs>
<mask id="masque" maskUnits="userSpaceOnUse" x="300" y="50" width="200" height="200">
<path id="speed" d="M0 0" style="stroke:white;fill:none"/>
</mask>
</defs>
<g onmousedown="cliquer(evt)" onmousemove="bouger(evt)" onmouseup="lacher(evt)">
<rect x="0" y="0" width="600" height="400" style="fill:#E0E0E0"/> 
<rect x="50" y="50" width="200" height="200" style="stroke:blue;fill:white"/>
<path d="M50 70l200 0M50 90l200 0M50 110l200 0M50 130l200 0M50 150l200 0M50 170l200 0M50 190l200 0M50 210l200 0M50 230l200 0" style="stroke:gray;fill:none;stroke-opacity:0.5"/>
<path d="M70 50l0 200M90 50l0 200M110 50l0 200M130 50l0 200M150 50l0 200M170 50l0 200M190 50l0 200M210 50l0 200M230 50l0 200" style="stroke:gray;fill:none;stroke-opacity:0.5"/>
<text x="300" y="20" style="text-anchor:middle">keyTimes</text>
<rect x="300" y="50" width="200" height="200" style="stroke:blue;fill:white"/>
<g transform="translate(250,0)" style="stroke:gray;fill:none;stroke-opacity:0.5">
<path d="M50 70l200 0M50 90l200 0M50 110l200 0M50 130l200 0M50 150l200 0M50 170l200 0M50 190l200 0M50 210l200 0M50 230l200 0"/>
<path d="M70 50l0 200M90 50l0 200M110 50l0 200M130 50l0 200M150 50l0 200M170 50l0 200M190 50l0 200M210 50l0 200M230 50l0 200"/>
</g>
<rect mask="url(#masque)" x="300" y="50" width="200" height="200" style="stroke:none;fill:red"/>
<path d="M300 150l200 0" style="stroke:green;fill:none"/>
<path id="courbe" d="M50 250L100,150 150,200 200,100 250,50" style="stroke:blue;fill:none"/>
<circle id="A1" cx="50" cy="250" r="3" style="stroke:green; fill:green"/>
<circle id="A2" cx="250" cy="50" r="3" style="stroke:green; fill:green"/>
<g id="controle">
<circle id="C1" cx="100" cy="150" r="3" style="stroke:red; fill:red"/>
<circle id="C2" cx="150" cy="200" r="3" style="stroke:red; fill:red"/>
<circle id="C3" cx="200" cy="100" r="3" style="stroke:red; fill:red"/>
</g>
</g>
<text x="70" y="280" >keyTimes <tspan id="kt">0;0.25;0.5;0.75;1</tspan></text>
<text x="70" y="300" >values <tspan id="kv">0;100;300;200;400;500</tspan></text>
<text x="400" y="280" style="text-anchor:middle">instant speed</text>
<rect x="20" y="310" width="500" height="20" style="stroke:blue;fill:white"/>
<rect x="20" y="310" width="0" height="20" style="fill:green">
<animate id="anime" fill="freeze" attributeName="width" repeatCount="1" values="0;125;375;250;500" dur="5s" calcMode="linear" 
begin="go.click" keyTimes="0;0.25;0.5;0.75;1"/>
</rect>
<text x="50" y="360" >Test animation</text>
<rect id="go" x="40" y="345" width="100" height="20" style="fill:red;fill-opacity:0.2"/>
<text x="350" y="360" >Add point</text>
<rect id="add" onclick="add_point()" x="340" y="345" width="80" height="20" style="fill:red;fill-opacity:0.2"/>
<text x="450" y="360" >Remove point</text>
<rect id="remove" onclick="javascript:action='efface'" x="440" y="345" width="100" height="20" style="fill:red;fill-opacity:0.2"/>

</svg>

